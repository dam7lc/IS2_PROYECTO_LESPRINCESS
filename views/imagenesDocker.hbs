<link rel="stylesheet" href="/stylesheets/direc.css">
<link rel="stylesheet" href="/stylesheets/boton2.css">
<link rel="stylesheet" href="/stylesheets/boton-Sig.css">
<body>

  <div class="grid-layout">

    <div class="box-header">
      <header>

          <section class="textos-header">
              <h1>Imágenes Docker</h1>
          </section>
          <div class="wave"  style="height: 75px; overflow: hidden;" ><svg viewBox="0 0 500 150" preserveAspectRatio="none"
          style="height: 100%; width: 100%;"><path d="M0.00,49.98 C233.35,227.47 236.73,-41.92 500.00,49.98 L500.00,150.00 L0.00,150.00 Z"
          style="stroke: none; fill: #f5cb8dab;"></path></svg></div>
      </header>
    </div>

    <div class="box-a">
        <h2 style="color:black; border-radius: 100px; font-size: 30px;">Información de las Imágenes Docker</h2>
        <div class="a-boton">
            <a class="boton" href="#Quees"><span>¿Qué son?</span></a>
            <a class="boton" href="#Funcion"><span>Función</span></a>
            <a class="boton" href="#Pasos"><span>Pasos</span></a>
            <a class="boton" href="#Crear"><span>Crear Imagen</span></a>
            <a class="boton" href="#Colocar"><span>Colocar Imágenes</span></a>
            <a class="boton" href="#Listar"><span>Listar Imágenes</span></a>

        </div>
    </div>
    <div class="box-b">
      <div style="text-align:right;">
        <img src="/images/Docker-Img.png" alt="Imagenes Docker" width="380" height="270" align="right">
      </div>
    </div>
    <div class="contenido">
            <h2 id="Quees" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>¿Qué son las imágenes Docker?</h2><br>
            <p>
                Las imágenes Docker son plantillas (que incluyen una aplicación, los binarios y las librerías necesarias) 
                que se utilizan para construir contenedores Docker y ejecutarlos (los contenedores ejecutarán una imagen 
                previamente compilada).
            </p>
            <p>
                También podemos decir que las imágenes Docker son instancias de un contenedor. Un contenedor se inicia ejecutando una 
                imagen. El archivo Dockerfile define una imagen, y por tanto cómo será el contenedor que se creará a partir de 
                esa imagen. Y ese Dockerfile contiene todos los comandos que normalmente se ejecutan manualmente para construir una 
                imagen para Docker. Docker puede leer las instrucciones de el archivo Dockerfile y construir una imagen para Docker 
                automáticamente.
            </p>
            <h2 id="Funcion" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>¿Cómo funciona?</h2><br>
            <p>
                Al usar Docker, un desarrollador crea una aplicación o un servicio y lo empaqueta, junto con sus dependencias, 
                en una imagen de contenedor. Para ejecutar la aplicación o el servicio, se crea una instancia de la imagen de la 
                aplicación para crear un contenedor, que se ejecutará en el host de Docker. Inicialmente, los contenedores se prueban
                 en un entorno de desarrollo o un PC.
            </p>
            <p>
               Los desarrolladores deben almacenar las imágenes en un registro, que actúa como una biblioteca de imágenes y es
                 necesario cuando se implementa en orquestadores de producción. Docker mantiene un registro público a través de
                  Docker Hub; otros proveedores ofrecen registros para distintas colecciones de imágenes, incluido Azure Container
                   Registry. Como alternativa, las empresas pueden tener un registro privado local para sus propias imágenes de Docker. 

            </p>
            <p>
                El registro es como una estantería donde las imágenes se almacenan y están disponibles para extraerlas con el fin de 
                compilar contenedores que ejecuten servicios o aplicaciones web. Hay registros de Docker privados a nivel local y en la
                 nube pública. Docker Hub es que un registro público mantenido por Docker; junto con Docker Trusted Registry, una
                  solución a nivel empresarial, Azure ofrece Azure Container Registry. AWS, Google y otros también tienen registros
                   de contenedor.
            </p>
            <h2 id="Pasos" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>Pasos para crear una Imagen Docker</h2><br>
            <p>
                Vamos a ver un resumen de los pasos necesarios para crear una imagen en Docker.
            </p>
            <p>
                -> Primero creamos nuestro Dockerfile, teniendo en cuenta la lista de instrucciones de los Dockerfile:
                <center>
                    <li>ADD</li>
                    <li>COPY</li>
                    <li>ENV</li>
                    <li>EXPOSE</li>
                    <li>FROM</li>
                    <li>LABEL</li>
                    <li>STOPSIGNAL</li>
                    <li>USER</li>
                    <li>VOLUME</li>
                    <li>WORKDIR</li>
                </center>
                
            </p>
            <p>
                -> Después creamos la imagen con docker build, a partir del Dockerfile creado. ><br>
                -> Y finalmente la ejecutamos con docker run.
            </p>
            <h2 id="Crear" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>Crear una imagen Docker (Ejemplo creando un “Hola Mundo“)</h2><br>
            <p>
                Las imágenes Docker se crean con un archivo llamado Dockerfile. Crearemos una imagen creando el típico 
                Hola Mundo (Hello World). Así que primero creamos un Dockerfile con este contenido:
                <center>
                    FROM alpine<br>
                    CMD echo "hello-world"
                </center>
            </p>
            <div style="text-align:center;">
                <img src="/images/cr-img1.jpg" alt="Listar Imagenes Docker" align="center">
            </div>
            <p>
                Después creamos la imagen de Docker:
                <center>
                    docker build -t hola .
                </center>
            </p>
            <p>
                Y finalmente la ejecutamos con:
                <center>
                    docker run hola
                </center>
            </p>
            <div style="text-align:center;">
                <img src="/images/cr-img2.jpg" alt="Listar Imagenes Docker" align="center">
            </div>
            <p>
                Y en la sección de Contenedores podremos ver que el contenedor que se ha creado con la anterior imagen
                 está creado y funcionando, aunque en este caso, si ha terminado su ejecución (solo saca por pantalla: hola mundo)
                  ya no estaría en ejecución.
            </p>
            <div style="text-align:center;">
                <img src="/images/cr-img3.jpg" alt="Listar Imagenes Docker" align="center">
            </div>
            <p>
                Aunque también podemos verlo en la lista de contenedores creados, en Portainer.
            </p>
            <div style="text-align:center;">
                <img src="/images/cr-img4.jpg" alt="Listar Imagenes Docker" align="center">
            </div>
            <p>
                Sobre la imagen que hemos creado, podemos fijarnos en que la primera linea es:
                <center>
                    FROM alpine
                </center>
            </p>
            <p>
                La instrucción FROM inicializa una nueva etapa de compilación, y establece la imagen base para las instrucciones
                 posteriores.<br>
                 En este caso utiliza la imagen de ALPINE disponible en los repositorios públicos.
            </p>
            <h2 id="Colocar" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>Colocar Imágenes Docker</h2><br>
            <p>
                Colocar imágenes en un registro le permite almacenar fragmentos de la aplicación que son estáticos e inmutables,
                 incluidas todas sus dependencias a nivel de marco. Después, esas imágenes se pueden versionar e implementar en
                  varios entornos y, por tanto, proporcionar una unidad de implementación coherente. Los registros de imágenes 
                  privados, ya sean hospedados localmente o en la nube, se recomiendan cuando: <br><br>
                -> Las imágenes no deben compartirse públicamente por motivos de confidencialidad. <br>
            
                -> Quiere tener una latencia de red mínima entre las imágenes y el entorno de implementación elegido. Por ejemplo,
                     si el entorno de producción es la nube de Azure, probablemente quiera almacenar las imágenes en Azure Container
                      Registry, para que la latencia de red sea mínima. De forma similar, si el entorno de producción es local, puede
                       tener un registro de confianza de Docker local disponible dentro de la misma red local.
            
            </p>
            
            <h2 id="Listar" style="background-color:#4d0686; color:#4d0686">""</h2>
            <h2>Listar las Imágenes DOCKER disponibles en nuestro sistema</h2><br>
            <p>
                Y para ver las imagenes que tenemos ya descargadas y compiladas en nuestra máquina Docker ejecutaremos:<br>
                docker image ls

            
            </p>
            <div style="text-align:center;">
                <img src="/images/ListarImg.jpg" alt="Listar Imagenes Docker" align="center">
            </div>
            <p>
                Después podemos ejecutar esa aplicación con:<br>
                docker run nombre_imagen<br><br>
                Las imagenes podemos compartirlas por medio del registro. Y las etiquetaremos con: <br>
                docker tag image username/repository:tag
            </p>
            </div>
            <div class="b-1">
            <div class="c-boton">
            <a class="boton" href="/introduccion"><span>Introducción</span></a>
            </div>
            </div>
            <div class="b-2">
            <div class="c-boton">
            <a class="boton" href="/contenedordocker"><span>Contenedores</span></a>
            </div>
            </div>
        </div>

</body>
