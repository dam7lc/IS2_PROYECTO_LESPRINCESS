<link href="stylesheets/cvstyle.css" rel="stylesheet">
<link href="stylesheets/boton.css" rel="stylesheet">
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Share+Tech&display=swap" rel="stylesheet">


  <h1>Ciclos de vida de un contenedor</h1>
  <div class="grid-layout">
    <div class="box-a">
      <p>El ciclo de vida del contenedor son las diferentes etapas por las que recorre un contenedor
      Docker con distintos comandos. Comienza desde que hacemos la descarga desde Dokcer
      Hub hasta que es removido o eliminado.</p>
    </div>
    <div class="box-b">
      <div style="text-align:center;">
        <img src="/images/cvCiclo.jpg" alt="Ciclo de vida" width="481" height="290" align="center">
      </div>
    </div>
    <div class="box-c">
      <h2 style="color:white; border-radius: 5px; font-size: 28px;">Comandos Docker en el ciclo de vida</h2>
      <div class="c-boton">

        <a class="boton" href="#docker-create"><span>Docker Create</span></a>
        <a class="boton" href="#docker-run"><span>Docker Run</span></a>
        <a class="boton" href="#docker-start"><span>Docker Start</span></a>
        <a class="boton" href="#docker-restart"><span>Docker Restart</span></a>
        <a class="boton" href="#docker-stop"><span>Docker Stop</span></a>
        <a class="boton" href="#docker-pause"><span>Docker Pause</span></a>
        <a class="boton" href="#docker-unpause"><span>Docker Unpause</span></a>
        <a class="boton" href="#docker-rm"><span>Docker RM</span></a>

      </div>
    </div>
    <div class="box-d">
      <!--Create-->
      <h2 id="docker-create">Docker Create</h2>
      <p>El comando docker create, crea una capa de contenedor grabable sobre la imagen especificada y la prepara para ejecutar con un comando especificado. La identificación del contenedor se imprime en STDOUT. Esto es similar a docker run -d excepto que el contenedor nunca se inicia. Luego puede usar el docker start para iniciar el contenedor en cualquier momento.</p>
      <p>Esto es útil cuando desea crear una configuración de contenedor con anticipación para que esté lista, liego ejecutarla cuando la necesite. El estado inicial del nuevo contenedor es created.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker create [OPTIONS] IMAGE [COMMAND] [ARG...]</p>
      <h2>Ejemplo</h2>
      <p> Al ejecutar docker run con las siguientes opciones, crea un contenedor y lo deja creado sin iniciar.</p>
      <!--Run -->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-run">Docker Run</h2>
      <p>El comando docker run primero crea una capa de contenedor grabable sobre la imagen especificada y luego la inicia usando el comando especificado. Es decir, la ejecución de Docker es equivalente a la API /containers/create then /containers/(id)/start. Un contenedor detenido se puede reiniciar con todos sus cambios anteriores intactos usando Docker Start. Vea docker ps -a para ver una lista de todos los contenedores.</p>
      <h2> Uso </h2>
      <p style="text-align:center">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</p>
      <h2>Ejemplo</h2>
      <!--Start-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-start">Docker Start</h2>
      <p > Iniciar uno o más contenedores detenidos.</p>
      <h2>Uso</h2>
      <p style="text-align:center"> docker start [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Al ejecutar docker start con el identificador del contenedor, este lo inicia si esta detenido.</p>
      <!--Stop-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-stop">Docker Stop</h2>
      <p>Detener uno o más contenedores en ejecución.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker stop [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <!--Restart-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-restart">Docker Restart</h2>
      <p>Detener uno o más contenedores en ejecución.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker stop [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <!--Pause-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-pause">Docker Pause</h2>
      <p>El comando docker pause suspende todos los procesos en los contenedores especificados. En Linux, esto usa el congelador cgroup. Tradicionalmente, cuando se suspende un proceso, se utiliza la señal SIGSTOP, que se puede observar cuando el proceso se suspende. Con el congelador cgroup, el proceso no es consciente y no puede capturar, que se está suspendiendo, y posteriormente se reanuda. </p>
      <h2>Uso</h2>
      <p style="text-align:center">docker pause CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <!--Unpause-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-unpause">Docker Unpause</h2>
      <p> El comando docker unpause anula la suspensión de todos los procesos en los contenedores especificados. En Linux, hace esto usando el congelador cgroup.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker unpause CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <!--rm-->
      <h2 style="background-color:#42C2FF; color:#42C2FF">""</h2>
      <h2 id="docker-rm">Docker RM</h2>
      <p>Retire uno o más contenedores.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker rm [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
    </div>

  </div>
