<link href="stylesheets/cvstyle.css" rel="stylesheet">
<link href="stylesheets/boton.css" rel="stylesheet">
<link href="stylesheets/boton-Sig.css" rel="stylesheet">
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Share+Tech&display=swap" rel="stylesheet">




  <div class="grid-layout">

    <div class="box-header">
      <header>

          <section class="textos-header">
              <h1>Ciclos de vida de un contenedor</h1>
          </section>
          <div class="wave"  style="height: 75px; overflow: hidden;" ><svg viewBox="0 0 500 150" preserveAspectRatio="none"
          style="height: 100%; width: 100%;"><path d="M0.00,49.98 C233.35,227.47 236.73,-41.92 500.00,49.98 L500.00,150.00 L0.00,150.00 Z"
          style="stroke: none; fill: #f5cb8dab;"></path></svg></div>
      </header>

    </div>
    <div class="box-a">
      <p>El ciclo de vida del contenedor son las diferentes etapas por las que recorre un contenedor
      Docker con distintos comandos. Comienza desde que hacemos la descarga desde Dokcer
      Hub hasta que es removido o eliminado.</p>
    </div>
    <div class="box-b">
      <div style="text-align:center;">
        <img src="/images/cvCiclo.jpg" alt="Ciclo de vida" width="481" height="290" align="center">
      </div>
    </div>
    <div class="box-c">
      <h2 style="color:black; border-radius: 5px; font-size: 28px;">Comandos Docker en el ciclo de vida</h2>
      <div class="a-boton">

        <a class="boton" href="#docker-create"><span>Docker Create</span></a>
        <a class="boton" href="#docker-run"><span>Docker Run</span></a>
        <a class="boton" href="#docker-start"><span>Docker Start</span></a>
        <a class="boton" href="#docker-restart"><span>Docker Restart</span></a>
        <a class="boton" href="#docker-stop"><span>Docker Stop</span></a>
        <a class="boton" href="#docker-pause"><span>Docker Pause</span></a>
        <a class="boton" href="#docker-unpause"><span>Docker Unpause</span></a>
        <a class="boton" href="#docker-rm"><span>Docker RM</span></a>

      </div>
    </div>
    <div class="box-d">
      <!--Create-->
      <h2 id="docker-create" style="background-color:white; color:white">" "</h2>
      <h2>Docker Create</h2>
      <p>El comando docker create, crea una capa de contenedor grabable sobre la imagen especificada y la prepara para ejecutar con un comando especificado. La identificación del contenedor se imprime en STDOUT. Esto es similar a docker run -d excepto que el contenedor nunca se inicia. Luego puede usar el docker start para iniciar el contenedor en cualquier momento.</p>
      <p>Esto es útil cuando desea crear una configuración de contenedor con anticipación para que esté lista, luego ejecutarla cuando la necesite. El estado inicial del nuevo contenedor es created.</p>

      <!--Run -->
      <h2 id="docker-run" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2 >Docker Run</h2>
      <p>El comando docker run primero crea una capa de contenedor grabable sobre la imagen especificada y luego la inicia usando el comando especificado. Es decir, la ejecución de Docker es equivalente a la API /containers/create then /containers/(id)/start. Un contenedor detenido se puede reiniciar con todos sus cambios anteriores intactos usando Docker Start. Vea docker ps -a para ver una lista de todos los contenedores.</p>
      <h2> Uso </h2>
      <p style="text-align:center">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</p>
      <h2>Ejemplo</h2>
      <div style="text-align:center;">
        <img src="/images/d-run.png" alt="Docker run" align="center">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-run2.png" alt="Docker run2" align="center">
      </div>

      <p>No nos muestra nada, pero se ejecutó de manera exitosa. Pensaríamos que la imagen pasó al estado STARTED, sin embargo no es así, ya que únicamente le
         indicamos que iniciara pero no que se ejecutara como DEAMON, es decir, que se ejecutara en segundo plano para la escucha de peticiones, por lo que pasó
         directamente al estado EXITED</p>
      <p>Si queremos mantenerlo en el estado STARTED basta con ingresar el siguiente comando donde -i indicamos que va ser interactivo y -d que lo queremos
         mantener como DEAMON.</p>
      <div style="text-align:center;">
        <img src="/images/d-run4.png" alt="Docker run4">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-run3.png" alt="Docker run3">
      </div>
      <!--Start-->
      <h2 id="docker-start" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2>Docker Start</h2>
      <p > Iniciar uno o más contenedores detenidos.</p>
      <h2>Uso</h2>
      <p style="text-align:center"> docker start [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Al ejecutar docker start con el identificador del contenedor, este lo inicia si esta detenido.</p>
      <div style="text-align:center;">
        <img src="/images/d-start.png" alt="Docker Start">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-start2.png" alt="Docker Start2">
      </div>
      <!--Stop-->
      <h2 id="docker-stop" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2 >Docker Stop</h2>
      <p>Detener uno o más contenedores en ejecución.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker stop [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Si deseamos detener el contenedor que está en ejecución, ingresamos el siguiente comando aunque necesitaremos el ID del contenedor. Podemos obtenerlo listando
        los contenedores</p>
      <div style="text-align:center;">
        <img src="/images/d-stop.png" alt="Docker Stop">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-stop2.png" alt="Docker Stop2">
      </div>
      <p>Observamos el ID del contenedor por lo que el comando se ejecutó de manera exitosa. Ahora el contenedor paso al estado EXITED</p>
      <!--Restart-->
      <h2 id="docker-restart" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2>Docker Restart</h2>
      <p>Detener uno o más contenedores en ejecución.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker stop [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Si queremos reiniciar el contenedor ejecutado ingresamos el siguiente comando con el ID del contenedor.</p>
      <div style="text-align:center;">
        <img src="/images/d-restart.png" alt="Docker restart">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-restart2.png" alt="Docker restart2">
      </div>
      <!--Pause-->
      <h2 id="docker-pause" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2 >Docker Pause</h2>
      <p>El comando docker pause suspende todos los procesos en los contenedores especificados. En Linux, esto usa el congelador cgroup. Tradicionalmente, cuando se suspende un proceso, se utiliza la señal SIGSTOP, que se puede observar cuando el proceso se suspende. Con el congelador cgroup, el proceso no es consciente y no puede capturar, que se está suspendiendo, y posteriormente se reanuda. </p>
      <h2>Uso</h2>
      <p style="text-align:center">docker pause CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Ahora mandaremos al contenedor al estado PAUSED con el siguiente comando.</p>
      <div style="text-align:center;">
        <img src="/images/d-pause.png" alt="Docker pause">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-pause2.png" alt="Docker pause2">
      </div>
      <p>Observamos que se ejecutó de manera exitosa mostrando el ID.</p>
      <!--Unpause-->
      <h2 id="docker-unpause" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2 >Docker Unpause</h2>
      <p> El comando docker unpause anula la suspensión de todos los procesos en los contenedores especificados. En Linux, hace esto usando el congelador cgroup.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker unpause CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Si deseamos volver a mandar el conten  al estado STARTED basta con ingresar el siguiente comando con el ID del contenedor.</p>
      <div style="text-align:center;">
        <img src="/images/d-unpause.png" alt="Docker unpause">
        <h2 style="background-color:white; color:white">" "</h2>
        <img src="/images/d-unpause2.png" alt="Docker unpause2">
      </div>
      <!--rm-->
      <h2 id="docker-rm" style="background-color:#4d0686; color:#4d0686">""</h2>
      <h2>Docker RM</h2>
      <p>Retire uno o más contenedores.</p>
      <h2>Uso</h2>
      <p style="text-align:center">docker rm [OPTIONS] CONTAINER [CONTAINER...]</p>
      <h2>Ejemplo</h2>
      <p>Si deseamos pasar al estado DELETED tendremos que pasar forzosamente al estado EXITED, para eso debemos de ejecutar el comando ya visto docker
       container stop con el ID del contenedor y a continuación el siguiente comando:</p>
       <div style="text-align:center;">
         <img src="/images/d-rm.png" alt="Docker rm">
         <h2 style="background-color:white; color:white">" "</h2>
         <img src="/images/d-rm2.png" alt="Docker rm2">
       </div>
       <p>Vemos que efectivamente se ejecutó de manera correcta el comando por lo que pasamos al último estado DELETED</p>
    </div>
    <div class="b-1">
    <div class="c-boton">
      <a class="boton" href="/directivas"><span>Directivas</span></a>
    </div>
    </div>
    <div class="b-2">
      <div class="c-boton">
      <a class="boton" href="/"><span>Inicio</span></a>
    </div>
    </div>
  </div>
